getgenv().Toggy = {
    Toggled = true, -- Toggle Duh
    ShiftAmount = 100000, -- amount of cash until game shutdown
    BreakTime = 6, -- amount of times it devlivers pizzas until it takes a 120 second break
    Status = false, -- Shows a small status of what it is doing
    SecondsToWait = 120, -- Time To wait
    AntiStink = true, -- Client Particles get disabled
    LowRender = true, -- Lowers Fps Good for farmming overnight and to run in background recommended
    KeySystem = false -- optional
}

local G = getgenv and getgenv() or _G or shared

for i,v in next, game.GetChildren(game) do
    G[v.ClassName] = v
end
G.Player = Players.LocalPlayer
G.wait = task.wait
G.spawn = task.spawn
G.Heartbeat = RunService.Heartbeat
G.Stepped = RunService.Stepped
G.RenderStepped = RunService.RenderStepped
G.Error = ScriptContext.Error
G.MessageOut = LogService.MessageOut
G.Kick = Player.Kick
G.Idled = Player.Idled
G.User = Instance.new("VirtualInputManager")


repeat wait() until game:IsLoaded()
getgenv().Bruh = 0
if not Text then
   getgenv().Text = Drawing.new("Text")
   Text.Color = Color3.new(0, 1, 1)
   Text.Font = 1
   Text.Outline = true
   Text.OutlineColor = Color3.new(0, 0, 0)
   Text.Position = Vector2.new(0,0)
   Text.Size = 25
   Text.Text = "Test"
   Text.Visible = true
end

if Toggy.Toggled then
    local X,Y= Text.TextBounds.X,Text.Position.Y
    Text.Position = Vector2.new(Workspace.CurrentCamera.ViewportSize.X  / X , Y + 50)
else
    Text.Text = ""
end

local Locations = Workspace.Environment.Locations
local JobHandler = Player.PlayerScripts.Modules.JobHandler
local Stats = ReplicatedStorage.Stats[Player.Name]
local Randomtime = tostring(math.random(1,3)) .. "h " .. tostring(math.random(1,47)) .. "m"
for i, v in next, getgc() do
    if type(v) == "function" then
        if getfenv(v).script == ReplicatedStorage.Modules.DataService then
            local C = getconstants(v)
            if table.find(C, "RemoteFunction") and table.find(C, "RemoteEvent") then
                Key = v
                break
            end
        end
    end
end

hookfunction(ReplicatedStorage.Modules.DataService.InvokeServer.i, function()
    warn("Ban Attempt")
end)
hookfunction(ReplicatedStorage.Modules.DataService.FireServer.i, function()
    warn("Ban Attempt")
end)

local Table = {
    Fire = function(Self, RemoteKey)
        local Remote = Key(RemoteKey.Type)
        if Remote then
            RemoteKey.Type = nil
            Remote:FireServer(RemoteKey)
        else
            return
        end
    end,
    Invoke = function(Self, RemoteKey)
        local Remote = Key(RemoteKey.Type, true)
        if Remote then
            RemoteKey.Type = nil
            local result = Remote:InvokeServer(RemoteKey)
            return result
        else
            return
        end
    end
}
local Sorry = function(Part ,Position)
    if Part then
        local CFrame = CFrame.new(Part.Position, Position)
        local Args1, Args2, Args3, Args4, Args5, Args6, Args7, Args8, Args9, Args10, Args11, Args12 = CFrame:GetComponents()
        return Args4, Args5, Args6, Args7, Args8, Args9, Args10, Args11, Args12
    end
end

local function Tween(Model, CFrame, Speed)
    for i=0, 1, 0.2 do
        Model.PrimaryPart.CFrame = Model.PrimaryPart.CFrame:Lerp(CFrame, i)
    end
end

local function Pathfind(Model,Position)
    local S = {WaypointSpacing = 3, Costs = {Grass = 9e9,  Mental = math.huge, Brick = math.huge, Ice = math.huge, SmoothPlastic = 300,  Water = 400}}
    local path = PathfindingService:CreatePath(S)
    path:ComputeAsync(Model.PrimaryPart.Position, Position)
    for i, v in next, path:GetWaypoints() do
        if path.Status == Enum.PathStatus.Success then
            Model.PrimaryPart.CFrame = CFrame.lookAt(Model.PrimaryPart.Position, v.Position + Vector3.new(0,2.5,0))
            Tween(Model, CFrame.new(v.Position.X, v.Position.Y + 2.5, v.Position.Z, Sorry(Model.PrimaryPart, v.Position + Vector3.new(0,2.5,0))), 35)
        end
    end
end

spawn(function()
    while wait() and Toggy.Toggled do

            if Player.PlayerGui.MainGUI.Bar.CharMenu.WorkFrame.WorkFrame.TimeLabel.TextLabel.Text:find(Randomtime) then Kick(Player, "Kicked at " .. Randomtime) end
            if Stats.Job.ShiftEarnings.Value >= Toggy.ShiftAmount then Kick("Kicked At" .. Toggy.ShiftAmount)  end
     
    end
end)

spawn(function()
    while wait() and Toggy.Toggled do
        pcall(function()
            if Bruh < Toggy.BreakTime then
                if Stats.Job.Value ~= "PizzaPlanetDelivery" then return require(JobHandler):GoToWork("PizzaPlanetDelivery") and require(JobHandler):StartShift("PizzaPlanetDelivery") end
                if not Player.Character:FindFirstChild("Vehicle_Delivery Moped", true) then
                    if Toggy.Status then
                        Text.Text = "Getting Mop"
                    end
                    Player.Character.HumanoidRootPart.CFrame = Locations:FindFirstChild("PizzaPlanet", true):FindFirstChild("DeliveryMoped", true):GetModelCFrame() * CFrame.new(0,5,0)
                    Workspace.CurrentCamera.CFrame = CFrame.lookAt(Workspace.CurrentCamera.CFrame.Position + Vector3.new(0,5,0), Locations:FindFirstChild("PizzaPlanet", true):FindFirstChild("DeliveryMoped", true):GetModelCFrame().Position)
                    FireConnection(Player.PlayerGui.MainGUI.InteractIndicator.Activated)
                end
                local C = nil
                if Player.Character:FindFirstChild("Vehicle_Delivery Moped", true) then
                    repeat
                        if Toggy.Status then
                            Text.Text = "Getting Pizza " .. Bruh 
                        end
                        Pathfind(Player.Character:FindFirstChild("Vehicle_Delivery Moped", true), Vector3.new(1161.008544921875, 10.427573204040527, 275.8211364746094))
                        if Mag(Player.Character:GetModelCFrame(), Locations:WaitForChild("PizzaPlanet"):WaitForChild("Conveyor"):WaitForChild("MovingBoxes"):FindFirstChildOfClass("UnionOperation")) < 25 and wait(5) then
                            C = Table:Invoke({Type = "TakePizzaBox", Box = Locations:WaitForChild("PizzaPlanet"):WaitForChild("Conveyor"):WaitForChild("MovingBoxes"):FindFirstChildOfClass("UnionOperation")})
                        end
                        wait(1)
                    until C ~= nil and C:FindFirstChild("HumanoidRootPart", true)
                    repeat wait()
                        if Toggy.Status then
                            Text.Text = "Getting Pizza to Customer"
                        end
                        Pathfind(Player.Character:FindFirstChild("Vehicle_Delivery Moped", true), C.HumanoidRootPart.Position + Vector3.new(0,0,0))
                        if Mag(C.HumanoidRootPart, Player.Character:GetModelCFrame()) < 5 and wait(5) then
                            Table:Fire({Type = "DeliverPizza", Customer = C})
                        end
                    until not Player.Character:FindFirstChild("Pizza Box", true)
                    Bruh = Bruh + 1
                end
            else
                for i=1, Toggy.SecondsToWait do
                    wait(1)
                    if Toggy.Status then
                        Text.Text = "Taking Break " .. i
                    end
                end
                Bruh = 0
            end
        end)
    end
end)
if Toggy.Toggled then
    return SendNotification("Credits", "DekuDimz", "", 10)
end
